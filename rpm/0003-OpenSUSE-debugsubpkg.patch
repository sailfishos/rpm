From ce9c9025d32cdbee665cb5504b2d686faf1f4a7b Mon Sep 17 00:00:00 2001
From: David Greaves <david@dgreaves.com>
Date: Wed, 17 Apr 2013 20:41:09 +0000
Subject: [PATCH] OpenSUSE-debugsubpkg

Create a debuginfo package for each subpackage.

--- ./scripts/find-debuginfo.sh.orig    2017-12-01 15:35:59.023537837 +0000
+++ ./scripts/find-debuginfo.sh 2017-12-01 15:36:30.351447397 +0000
@@ -552,19 +552,25 @@ if $run_dwz \
   fi
 fi
 
-# For each symlink whose target has a .debug file,
-# make a .debug symlink to that file.
-find "$RPM_BUILD_ROOT" ! -path "${debugdir}/*" -type l -print |
-while read f
-do
-  t=$(readlink -m "$f").debug
-  f=${f#$RPM_BUILD_ROOT}
-  t=${t#$RPM_BUILD_ROOT}
-  if [ -f "$debugdir$t" ]; then
-    echo "symlinked /usr/lib/debug$t to /usr/lib/debug${f}.debug"
-    debug_link "/usr/lib/debug$t" "${f}.debug"
-  fi
-done
+# We used to make a .debug symlink for each symlink whose target
+# has a .debug file to that file.  This is not necessary because
+# the debuglink section contains only the destination of those links.
+# Creating those links anyway results in debuginfo packages for
+# devel packages just because of the .so symlinks in them.
+
+## For each symlink whose target has a .debug file,
+## make a .debug symlink to that file.
+#find "$RPM_BUILD_ROOT" ! -path "${debugdir}/*" -type l -print |
+#while read f
+#do
+#  t=$(readlink -m "$f").debug
+#  f=${f#$RPM_BUILD_ROOT}
+#  t=${t#$RPM_BUILD_ROOT}
+#  if [ -f "$debugdir$t" ]; then
+#    echo "symlinked /usr/lib/debug$t to /usr/lib/debug${f}.debug"
+#    debug_link "/usr/lib/debug$t" "${f}.debug"
+#  fi
+#done
 
 if [ -s "$SOURCEFILE" ]; then
   # See also debugedit invocation. Directories must match up.

